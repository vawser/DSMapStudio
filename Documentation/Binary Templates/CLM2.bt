//------------------------------------------------
//--- 010 Editor v9.0.1 Binary Template
//
//      File: CLM2.bt
//   Authors: TKGP
//   Version: 
//   Purpose: Cloth-related .clm2 files
//  Category: Dantelion
// File Mask: *.clm2
//  ID Bytes: 43 4C 4D 32
//   History: 
//------------------------------------------------

#include "Util.bt"
LittleEndian();

//------------------------------------------------

typedef struct {
    char magic[4]; Assert(magic == "CLM2");
    int unk04; Assert(unk04 == 0);
    short unk08; Assert(unk08 == 1);
    short unk0A; Assert(unk0A == 1);
    int unk0C; Assert(unk0C == 0);
    int unk10; Assert(unk10 == 0);
    int count;
    int unk18; Assert(unk18 == 0x28);
    int unk1C; Assert(unk1C == 0);
    int unk20; Assert(unk20 == 0);
    int unk24; Assert(unk24 == 0x28);
} Header <bgcolor=cLtRed>;


typedef struct {
    short unk00;
    short unk02;
} EntryItem <read=ReadEntryItem, bgcolor=cAqua>;

string ReadEntryItem(EntryItem& item) {
    string str;
    return SPrintf(str, "%3i %3i", item.unk00, item.unk02);
}


typedef struct {
    int unk00 <hidden=true>; Assert(unk00 == 0);
    int count;
    int offset;
    int unk0C <hidden=true>; Assert(unk0C == 0);
    
    if (count > 0) {
        local quad pos <hidden=true> = FTell();
        FSeek(offset);
        EntryItem items[count];
        FSeek(pos);
    }
} Entry <bgcolor=cLtGreen, optimize=false>;

//------------------------------------------------

Header header;
Entry entries[header.count];
