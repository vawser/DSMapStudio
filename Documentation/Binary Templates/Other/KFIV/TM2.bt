//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: TM2.bt
//   Authors: TKGP
//   Version: 
//   Purpose: King's Field IV .tm2 files
//  Category: KFIV
// File Mask: *.tm2
//  ID Bytes: 
//   History: 
//------------------------------------------------

// To use this template from another template, define TM2_LIBRARY before including,
// then instantiate type TM2.

LittleEndian();

//------------------------------------------------

typedef struct {
    int fileSize <format=hex>;
    int pixelsLength <format=hex>;
    int unk08; Assert(unk08 == 1);
    int unk0C <hidden=true>; Assert(unk0C == 0);
    int unk10 <format=hex>;
    int unk14 <format=hex>;
    int unk18 <format=hex>;
    int unk1C <hidden=true>; Assert(unk1C == 0);
} TM2Header <bgcolor=cLtRed>;

//------------------------------------------------

#ifdef TM2_LIBRARY
typedef struct {
#endif

local quad fileStart <hidden=true> = FTell();

TM2Header header;
ubyte pixels[header.pixelsLength] <bgcolor=cLtGreen>;
// Usually 0x400 but not always, not sure why
ubyte palette[fileStart + header.fileSize - FTell()] <bgcolor=cAqua>;

Assert(FTell() - fileStart <= header.fileSize,
    "TM2 read past end of file.");
FSeek(fileStart + header.fileSize);

#ifdef TM2_LIBRARY
} TM2 <optimize=false>;
#endif
