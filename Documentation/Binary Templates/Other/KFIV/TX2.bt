//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: TX2.bt
//   Authors: TKGP
//   Version: 
//   Purpose: King's Field IV textures
//  Category: KFIV
// File Mask: *.tx2
//  ID Bytes: 
//   History: 
//------------------------------------------------

// To use this template from another template, define TX2_LIBRARY before including,
// then instantiate type TX2.

LittleEndian();

//------------------------------------------------

typedef struct {
    int fileSize <format=hex>;
    int textureCount;
    int unk08 <hidden=true>; Assert(unk08 == 0);
    int unk0C <hidden=true>; Assert(unk0C == 0);
} TX2Header <bgcolor=cLtRed>;


typedef struct {
    int offset <format=hex>;
    int unk04 <hidden=true>; Assert(unk04 == 0);
    int unk08 <hidden=true>; Assert(unk08 == 0);
    int unk0C <hidden=true>; Assert(unk0C == 0);
} TX2TextureOffset <bgcolor=cLtGreen, optimize=false>;


typedef struct {
    int unk00;
    int unk04;
    int unk08;
    int unk0C;
    int unk10;
    int unk14;
    int unk18;
    int unk1C;
    int unk20;
    int unk24;
    int unk28;
    int unk2C;
    int unk30;
    int unk34;
    int unk38;
    int unk3C;
    int unk40;
    int unk44;
    int unk48;
    int unk4C;
    int unk50;
    int unk54;
    int unk58;
    int unk5C;
    int width;
    int height;
    int unk68;
    int unk6C;
    int unk70;
    int unk74;
    int unk78;
    int unk7C;
    int unk80;
    int unk84;
    int unk88;
    int unk8C;
    
    ubyte pixels[unk80 * 0x10] <bgcolor=cDkGreen>;
    
    int unkX00;
    int unkX04;
    int unkX08;
    int unkX0C;
    int unkX10;
    int unkX14;
    int unkX18;
    int unkX1C;
    int unkX20;
    int unkX24;
    int unkX28;
    int unkX2C;
    int unkX30;
    int unkX34;
    int unkX38;
    int unkX3C;
    int paletteWidth;
    int paletteHeight;
    int unkX48;
    int unkX4C;
    int unkX50;
    int unkX54;
    int unkX58;
    int unkX5C;
    int unkX60;
    int unkX64;
    int unkX68;
    int unkX6C;
    
    ubyte palette[paletteWidth * paletteHeight * 4] <bgcolor=cDkGreen>;
} TX2Texture <bgcolor=cGreen, optimize=false>;

//------------------------------------------------

#ifdef TX2_LIBRARY
typedef struct {
#endif

local quad fileStart <hidden=true> = FTell();

TX2Header header;
struct { TX2TextureOffset offsets[header.textureCount]; } offsets;

struct {
    local int i <hidden=true>;
    for (i = 0; i < header.textureCount; i++) {
        FSeek(fileStart + offsets.offsets[i].offset);
        TX2Texture textures;
    }
} textures;

Assert(FTell() - fileStart <= header.fileSize,
    "TX2 read past end of file.");
FSeek(fileStart + header.fileSize);

#ifdef TX2_LIBRARY
} TX2 <optimize=false>;
#endif
