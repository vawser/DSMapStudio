//------------------------------------------------
//--- 010 Editor v9.0.1 Binary Template
//
//      File: CCM2.bt
//   Authors: TKGP
//   Version: 
//   Purpose: DS2/DS3 legacy font layouts
//  Category: Dark Souls
// File Mask: *.ccm
//  ID Bytes: 00 00 02 00
//   History: 
//------------------------------------------------

typedef struct {
    short unk00; Assert(unk00 == 0);
    short unk02; Assert(unk02 == 2);
    int fileSize <format=hex>;
    short unk08;
    short textureWidth;
    short textureHeight;
    short texRegionCount;
    short glyphCount;
    short unk12; Assert(unk12 == 0);
    int unk14; Assert(unk14 == 0x20);
    int glyphOffset <format=hex>;
    byte unk1C; Assert(unk1C == 4);
    byte unk1D; Assert(unk1D == 0);
    byte textureCount;
    byte unk1F; Assert(unk1F == 0);
} Header;


typedef struct {
    short x1;
    short y1;
    short x2;
    short y2;
} TexRegion <read=ReadTexRegion>;

wstring ReadTexRegion(TexRegion& texRegion) {
    string str;
    SPrintf(str, "(%3i, %3i) (%3i, %3i)",
        texRegion.x1, texRegion.y1, texRegion.x2, texRegion.y2);
    return str;
}

typedef struct {
    int code;
    int texRegionOffset <format=hex>;
    short textureIndex;
    short preSpace;
    short width;
    short advance;
    int unk10; Assert(unk10 == 0);
    int unk14; Assert(unk14 == 0);
    
    local quad pos <hidden=true> = FTell();
    FSeek(texRegionOffset);
    byte b <bgcolor=cBlack, fgcolor=cWhite>;
    FSeek(pos);
} Glyph <read=ReadGlyph, optimize=false>;

wstring ReadGlyph(Glyph& glyph) {
    string str;
    SPrintf(str, "%5i %4X %2i %2i %2i %2i",
        glyph.code, glyph.texRegionOffset, glyph.textureIndex,
        glyph.preSpace, glyph.width, glyph.advance);
    return str;
}


Header header <bgcolor=cLtRed>;
TexRegion texRegions[header.texRegionCount] <bgcolor=cLtGreen>;
struct {
    Glyph glyphs[header.glyphCount];
} glyphs <bgcolor=cLtBlue>;
Assert(FTell() == header.fileSize);